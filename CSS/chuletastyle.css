/* Tipos de Display (determina el espacio que ocupa el elemento): 
none, inline, block, inline-block */
/* El sombrerito ^ significa "empezar" */
[class^="box"] {
    background-color: steelblue;

}
/* Equivalente a lo anterior
.box-0, .box-1, .box-2, .box-3, .box-4, .box-5, .box-6 {
background-color: steelblue;
} */

/* Display none - oculta este div en el navegador. */
.box-0 {
    display: none;
}

/* Display inline-block - Se ponen en linea respetando propiedades como margenes, padings, etc.,
El inline machacaría todas esas opciones */
.box-3, .box-4, .box-3 p, .box- p {
    display: inline-block;
}

/* Display inline - para poner en la misma línea 
(lo hacemos con los div y con los parrafos, ya que ambos son bloques) */
.box-5, .box-6, .box-5 p, .box-6 p {
    display: inline;
}

/* creamos la clase rectangle para asignar estos estilos a otros elementos */
.rectangle {
    background-color: teal;
    height: 50px;
    width: 25%;
}

/* <!-- Para centrar a lo ancho, ejemplo (eje x - horizontalmente) --> */
.x-center {
        /* con margin auto centramos horizontalmente por defecto */
    margin:auto;
}

/* Posicion relativa */
.pos-relative {
    position:relative;
    left: 100px;
    top: -50px;
    /* con z-index se controla la superposicion. Aqui no me tacha el texto del h2. 
    se pone el negativo*/
    z-index:-1;
}

/* Posicion absoluta (en relación al padre) (OJO!!! indicar position relative en el padre) */
.pos-absolute-parent {
    height: 300px;
    border: 15px solid tomato;
    position: relative;
}

.pos-absolute-child {
    height: 50px;
    width: 50px;
    background-color: #333;
    position: absolute;
    /* Para centrarlo exactamente dentro del padre (hay formas más sencillas de hacerlo, con flexbox) */
    top: 50%;
    right: 50%;
    margin-right: -25px;
    margin-top: -25px;
}
/* Posicionamiento fijo - fixed */
.pos-fixed {
    background-color: #333;
    padding: 20px 30px;
    position: fixed;
    right: 30px;
    bottom: 5px;
    /* Para superponerlo le asignamos el z-index */
    z-index: 1;
}

.pos-fixed a {
    color: white;
    /* quitamos el subrayado por defecto del enlace */
    text-decoration: none;
}

/* Posicionamiento Sticky (se mantiene fijo a partir de 
que donde se lo indiquemos)*/
.pos-sticky {
    background-color: steelblue;
    padding: 15px 25px;

    position: sticky;
    top: 0;

    
} 
.pos-sticky a {
    color: white;
    /* quitamos el subrayado por defecto del enlace */
    text-decoration: none;

}

/* Posicionamiento flotante - Float */
/* Permite posicionar contenedores dentro de otros contendores 
en donde quieras. */
.pos-float-parent {
    border: 5px solid royalblue;
    color: white;
    font-size: 20px;
    /* Esto respeta al tamaño de los floats*/ 
    overflow: hidden;   
}

.pos-float-child-1 {
    background-color: brown;
    height: 100px;
    width: 33.3%;
    float: left;
}

.pos-float-child-2 {
    background-color: darkblue;
    height: 100px;
    width: 33.3%;
    float: left;
    
}

.pos-float-child-3 {
    background-color: darkorange;
    height: 100px;
    width: 33.3%;
    float: left;
}

.pos-float-child-4 {
    background-color: yellowgreen;
    height: 50px;
    width: 100%;
    /* ESta opción respeta los float anteriores, 
    respeta su espacio y empieza en una linea nueva. */
    clear: both;
    
}

.pos-float-child-5 {
    background-color: red;
    height: 50px;
    width: 33,3%;
    float: right;    
}

.pos-float-child-6 {
    background-color: blueviolet;
}

/* Overflow - Gestión del desbordamiento del contenido */
[class^="overflow-parent"] {
    width: 200px;
    height: 100px;
    border: 3px dashed black;
    margin-bottom: 150px;
}

.overflow-parent-1 {
    overflow: hidden;

}
.overflow-parent-2 {
    overflow: visible;

}
.overflow-parent-3 {
    overflow:scroll;

}

/* Tamaño de Cajas (box-sizing) */

.box-sizing-parent {
    width: 200px;
    height: 200px;
    border: 10px solid goldenrod;

}
.box-sizing-child {
    width: 100%;
    height: 50px;
    background-color: gray;
    border: 10px solid darkolivegreen;
    /* valor por defecto */
    box-sizing: content-box;
}
.border-box{
    margin-top:10px;
    box-sizing: border-box;
}

/* <!-- Pseudo-clases (estados y propiedades de un elemento) : y pseudo-elementos (no existen de
forma individual en el HTML) :: --> */

/* Ponemos grande la primera letra del elemento parrafo */
p::first-letter {
    font-size: 3em;
    color: blueviolet;

}

/* Con :hover. Al ponernos con el raton encima, el texto se pone rojo. */
h2:hover{
    color:red;

}

/* <!-- Medias Querys - Responsive --> */
.responsive {
    height: 100px;
    width: 30%;
    background-color: aquamarine;
}

/* RESPONSIVE - MEDIAS QUERIES */
/* Cuando la pantalla llegue a los px indicados, la caja clase responsive 
ocupará el 100% del ancho (orden de px descendente). */
/* En caso de comenzar creando la web para version movil,
indicaríamos min-width (orden de px ascendente) */

@media only screen and (max-width: 920px) {
   .responsive {
        width: 50%;

   }    
}

@media only screen and (max-width: 700px) {
    .responsive {
         width: 100%;
 
    }
}

/* Ejemplos */
 /* Extra small devices (phones, 600px and down) */
 @media only screen and (max-width: 600px) {...}

 /* Small devices (portrait tablets and large phones, 600px and up) */
 @media only screen and (min-width: 600px) {...}
 
 /* Medium devices (landscape tablets, 768px and up) */
 @media only screen and (min-width: 768px) {...}
 
 /* Large devices (laptops/desktops, 992px and up) */
 @media only screen and (min-width: 992px) {...}
 
 /* Extra large devices (large laptops and desktops, 1200px and up) */
 @media only screen and (min-width: 1200px) {...}

 /* <!-- Flexbox - Posicionar Cajas sin Float. --> */
 /* Propiedades a nivel del contenedor */
 .flex-parent {
     display: flex;
     flex-direction: row;
    /* Ponemos en una nueva linea si no cabe.
    con flex nos ahorraremos medias queries */
     /* flex-wrap: wrap; */
     /* flex-flow: row wrap; es igual a las dos ordenes anteriores, pero unidas; */
     
     /* centramos todo el container padre */
     justify-content: center;
 }

 [class^="flex-child"] {
     width: 250px;
     height: 250px;
     display: flex;
     /* Ambos para centrar de manera horizontal y vertical */
     justify-content: center;
     align-items: center; 

 }

/* Aplico este estilo a los hijos impares (odd) */
/* Elijo un hijo concreto con div:nth-child(nº hijo) */
 .flex-parent > div:nth-child(odd) {
     background-color: rgb(170, 34, 34);
     color:#333;
 }

 /* Aplico este estilo a los hijos pares (even) */
 .flex-parent > div:nth-child(even) {
    background-color: rgb(55, 12, 209);
    color:white;
}

/* <!-- Flexbox - Posicionar Cajas sin Float. --> */
 /* Propiedades a nivel de elemento (individual de cada etiqueta) */

/* Decrece x veces más en relación al resto */
/* OJO, esta opcion es incompatible con flex-wrap */
.flex-child-1 {
    flex-shrink: 2;
}
/* Este aumenta */
.flex-child-2 {
    flex-grow: 1;
}

.flex-child-3 {
    /* flex-shrink: 1;
    flex-grow: 2;
    flex-basis: 250px;
    /* esto serían las 3 reglas de una vez: */
    /* flex: 1 3 auto; */

    /* sobreescribir el valor del contenedor padre */
    align-self: flex-end;

}
/* CSS GRID Basico con medias queries */
[class^="grid-child"] {
    background-color: coral;
    /* PAra centrar el texto de los hijos */
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Indicamos display:grid en el padre */
.grid-parent {
    display: grid;
    /* Creamos 3 columnas, la segunda es el doble mayor que la 1ª y la 3ª */
    /* grid-template-columns: 1fr 2fr 1fr; */
    /* Creamos 2 filas, la primera dos veces mayor a la segunda*/
    grid-template-rows: 2fr 1fr; 
    gap: 10px;

    /*con esto nos ahorramos las medias queries*/
    /* grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); */
}

 @media only screen and (max-width: 920px) {
    .grid-parent {
        grid-template-columns: 1fr 2fr;

    }
}

@media only screen and (max-width: 768px){
    .grid-parent {
        grid-template-columns: 1fr;
    }
} 

/* CSS GRID por líneas */

.grid-parent-lineas {
    display: grid;
    /* Creo 3 columnas, mismo tamaño */
    grid-template-columns: repeat(3, 1fr);
    /* creo 4 filas, mismo tamaño */
    grid-template-rows: repeat(4, 1fr);
    gap: 10px;  /*espacio entre líneas */

}

.grid-parent-lineas .grid-child-1 {
    grid-column: 1 / 3; /* De una linea a otra línea (de linea 1 a linea 3) */
    grid-row: 1;  /*equivalente a grid-row: 1 / 2 */

}

.grid-parent-lineas .grid-child-2 {
    grid-column: 3; /* a columna 3 */
    grid-row: 1 / 3; /*de fila 1 a fila 3 */
    
}

.grid-parent-lineas .grid-child-3 {
    grid-column: 1 / 3; /* De la columna 1 a la 3 */
    grid-row: 2 / 5; /*de fila 2 a fila 5 */
    z-index: -1; /*para que quede por detrás de otros elementos solapados*/
    opacity: 0.5; /*quitar opacidad para ver solapados*/

}


.grid-parent-lineas .grid-child-4 {
    grid-column: 3;  /*a columna 3*/
    grid-row: 3;   /*a fila 3*/
    
}

.grid-parent-lineas .grid-child-5 {
    grid-column: 2 / 4; /* de columna 2 a columna 4*/
    grid-row: 4;  /* a fila 4*/
    
}

.grid-parent-lineas .grid-child-6 {
    grid-column: 1; /* A columna 1*/
    grid-row: 2;  /* a fila 2*/
    
}

/* CSS Grid por Areas */
.grid-parent-areas {
    display: grid;
    gap: 10px;  /*espacio entre líneas */
    grid-template-columns: 150px 1fr 1fr;
    grid-template-rows: 1fr 4fr 1fr;


     grid-template-areas: ". nav nav"   /*con un . dejo ese espacio en blanco */
                         "content1 content2 content3"
                         "footer footer .";
}

.grid-parent-areas .grid-child-1 {
    grid-area: nav;
}

.grid-parent-areas .grid-child-2 {
    grid-area: content1;
}
.grid-parent-areas .grid-child-3 {
    grid-area: content2;
}
.grid-parent-areas .grid-child-4 {
    grid-area: content3 ;
}
.grid-parent-areas .grid-child-5 {
    grid-area: footer;
}

/* Iconos - Icons */
.icon-1 {
    color: aqua;
}

.icon-2 {
    color: blueviolet;
}

.icon-3 {
    color: chartreuse;
}

/* Gradientes o Degradados (lineales o radiales */

[class^="gradient"] {
    height: 300px;
    margin-bottom: 10px;
}

.gradient-1 {
    background: linear-gradient(to right, darkblue, white);
}

.gradient-2 {
    background: linear-gradient(to bottom, white,darkblue 5%, white);
}

.gradient-3 {
    background: linear-gradient(to bottom, rgba(255,255,255,0),rgba(255,255,255,1)), url(imagenes_css/puerto_malaga.jpg);
    background-size: cover;  /*Para que no se me repita la imagen*/
}

.gradient-4 {
    background: radial-gradient(white, tomato, green);
}

/* Sombras */
.gradient-4 {
    background: radial-gradient(white, tomato, green);
    width: 50%;
    /* Sombra (mueve horizontalmente, mueve verticalmente, desenfoca y color)
               (offset-x , offset-y , radio-desenfoque y color)*/
    box-shadow: 5px 0px 15px black;
}

/* Transformaciones */

.transform {
    height: 50px;
    width: 50px;
    background-color: grey;

    transform: translate(500px, -5px); /*muevo a la dcha y arriba (siempre negativo)*/
    transform: rotate(25deg) scale(2); /*rotar 45 grados */ /*amplio su tamaño al doble*/
    transform: skew(25deg); /*sesgamos 25 grados*/
}

/* Transiciones - transition (movemos de A a B) */
.transition {
    height: 100px;
    width: 100px;
    background-color: darkcyan;
    color: white;
    cursor: pointer;

    display: flex;
    justify-content: center;
    align-items: center;
    margin-left: 100px;
/*determinamos para que propiedad se aplicará la transicion
  En este caso para transform */
    /* transition-property: transform; */
    /* transition-duration: 0.3s; */
    /* transition-delay: 1s; */
    /* transition-timing-function: ease-in; */
    /* transition: transform 0.3s ease-in 1s; ordenamos todo en una sola línea */
}

.transition:hover {
    background-color: blueviolet;
    transform: scale(1.3) rotate(3deg);
}

/* Animaciones - text-animation */
/* Hay que relacionar el animation-name con el @keyframes */
.text-animation {
    animation-name: slidein;
    animation-duration: 10s;
    animation-iteration-count: infinite;
}
/* Asi va de un lado a otro lado, se pone rojo en el centro. */
@keyframes slidein {
    from {
        margin-left: 100%;
    }

    50% {
        color: red;
        margin-left: 0;
    }

    to {
        margin-left: 100%;
    }

}